import { useState } from "react";
import { motion } from "framer-motion";
import { Link } from "react-scroll";

export default function Navbar() {
  const [isDark, setIsDark] = useState(false);
  const [isOpen, setIsOpen] = useState(false);
  // Toggle dark mode
  const toggleDarkMode = () => {
    setIsDark(!isDark);
    if (isDark) {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }
  };

  // Toggle mobile menu
  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  return (
    <motion.nav
      className="bg-transparent dark:bg-gray-900"
      initial={{ y: -100, opacity: 0 }}
      animate={{ y: 0, opacity: 1 }}
      transition={{ duration: 0.5, ease: "easeOut" }}
    >
      <div className="max-w-screen-xl flex items-center justify-between mx-auto p-4">
        {/* Logo */}
        <motion.div
          className="flex text-2xl font-extrabold uppercase text-white text-3xl font-boldonse"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 1 }}
        >
          <svg
            className="w-8 h-8"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 500 500"
            fill="none"
          >
            <path
              d="M0 0 C2.39371149 1.89561883 4.69332764 3.86154856 6.984375 5.87890625 C7.995 6.62140625 9.005625 7.36390625 10.046875 8.12890625 C18.92933508 15.68150649 24.20737182 26.4954524 28.984375 36.87890625 C33.60098254 36.18461176 37.696409 34.45195652 41.984375 32.69140625 C97.46330875 10.63324217 157.92151647 12.40815572 213.50439453 32.97802734 C217.30453618 34.35846864 221.14066562 35.62579021 224.984375 36.87890625 C225.3246875 36.14027344 225.665 35.40164062 226.015625 34.640625 C236.12800034 13.47456278 251.99237027 -1.8230249 273.984375 -10.12109375 C295.36376189 -17.54558125 318.792166 -15.56637434 339.17480469 -6.03515625 C358.522778 3.73802401 373.08902174 21.49029307 379.984375 41.87890625 C380.30277344 42.78898437 380.62117188 43.6990625 380.94921875 44.63671875 C387.03453359 65.66891291 383.60461787 89.08112438 373.2421875 108.0546875 C364.85941209 122.6237018 353.63335261 132.6510175 338.984375 140.87890625 C337.499375 141.86890625 337.499375 141.86890625 335.984375 142.87890625 C336.55285156 144.03003906 337.12132812 145.18117187 337.70703125 146.3671875 C366.82693871 206.06458211 369.76783866 271.56094636 348.515625 334.28125 C340.41298283 357.29275375 328.2398156 378.85950647 312.984375 397.87890625 C311.96537109 399.18408203 311.96537109 399.18408203 310.92578125 400.515625 C302.27148092 411.39304835 292.80558308 422.11095304 281.984375 430.87890625 C280.83645914 431.84933799 279.68941532 432.82080166 278.54296875 433.79296875 C269.17547207 441.66063322 259.47592301 448.59172533 248.984375 454.87890625 C247.84838867 455.56315674 247.84838867 455.56315674 246.68945312 456.26123047 C224.20092657 469.6354437 199.40506188 478.85948627 173.796875 484.12890625 C173.06235107 484.28020996 172.32782715 484.43151367 171.57104492 484.58740234 C156.80079537 487.4183002 142.11699413 488.28861122 127.109375 488.25390625 C126.21696106 488.25336243 125.32454712 488.2528186 124.40509033 488.2522583 C59.56099297 488.07160992 2.09809028 460.4133847 -44.015625 415.87890625 C-46.49866691 413.31985285 -48.76205158 410.64090782 -51.015625 407.87890625 C-51.98898797 406.72866259 -52.96301349 405.57897945 -53.9375 404.4296875 C-93.83141144 356.91961148 -112.93138197 294.88737411 -108.30908203 233.12597656 C-105.4168173 201.12338011 -96.16684581 171.59534634 -82.015625 142.87890625 C-83.23185547 142.16927734 -83.23185547 142.16927734 -84.47265625 141.4453125 C-106.27220492 128.42649007 -121.75753932 110.78620044 -128.09375 85.83984375 C-132.78478077 64.03941825 -128.42279794 41.73544525 -117.015625 22.87890625 C-114.59308812 19.27730234 -111.95316583 16.07004773 -109.015625 12.87890625 C-108.21640625 11.9765625 -107.4171875 11.07421875 -106.59375 10.14453125 C-79.36637028 -19.01615354 -32.39453541 -22.78527555 0 0 Z M-70.015625 47.87890625 C-75.28553337 56.03690851 -78.38574381 64.30100654 -76.328125 74.00390625 C-74.20109208 80.97663005 -71.53082992 87.08824157 -65.015625 90.87890625 C-56.51633842 93.0585856 -49.16420523 89.33644229 -41.89453125 85.28125 C-31.9927153 79.36729533 -22.78491164 70.64142519 -19.23046875 59.39453125 C-18.55576815 55.49043846 -18.77996918 53.39120152 -20.453125 49.75390625 C-26.97426735 42.43750264 -32.70761358 37.74761489 -42.64453125 36.56640625 C-53.25302517 36.08351606 -63.17156088 39.55544836 -70.015625 47.87890625 Z M276.984375 46.87890625 C273.83866983 50.59127424 272.60473277 53.99417617 272.984375 58.87890625 C276.45453822 70.43972626 286.2013329 79.49610857 296.31640625 85.4453125 C306.86986687 91.25102335 306.86986687 91.25102335 318.546875 90.87890625 C324.61945014 87.34577162 327.79897996 83.35300818 329.921875 76.62890625 C332.10191062 67.00260439 330.53100945 59.26189224 325.85546875 50.6171875 C320.96650339 43.46235511 313.70061765 39.45087298 305.484375 37.19140625 C294.04919398 35.76200862 285.28021323 38.99022573 276.984375 46.87890625 Z M34.984375 164.87890625 C30.13841101 172.38071025 28.25815214 179.07263336 29.546875 187.87890625 C31.34732531 195.74530323 36.55940691 201.28964333 42.984375 205.87890625 C50.16889758 209.60421425 56.88715622 210.75734166 64.6875 208.7265625 C73.45253362 205.49184771 79.31505517 199.33887864 83.359375 191.06640625 C85.05827749 182.40200356 84.50883849 174.58583134 79.984375 166.87890625 C74.69434988 159.82147642 68.2141425 155.81046027 59.4765625 154.50390625 C50.17981494 154.0376117 41.01508796 157.69729387 34.984375 164.87890625 Z M175.984375 164.87890625 C171.13841101 172.38071025 169.25815214 179.07263336 170.546875 187.87890625 C172.34732531 195.74530323 177.55940691 201.28964333 183.984375 205.87890625 C191.16889758 209.60421425 197.88715622 210.75734166 205.6875 208.7265625 C214.45253362 205.49184771 220.31505517 199.33887864 224.359375 191.06640625 C226.05827749 182.40200356 225.50883849 174.58583134 220.984375 166.87890625 C215.69434988 159.82147642 209.2141425 155.81046027 200.4765625 154.50390625 C191.17981494 154.0376117 182.01508796 157.69729387 175.984375 164.87890625 Z M94.66015625 247.03125 C93.80413818 247.30888184 92.94812012 247.58651367 92.06616211 247.87255859 C91.15229736 248.18402832 90.23843262 248.49549805 89.296875 248.81640625 C88.35658447 249.13561035 87.41629395 249.45481445 86.44750977 249.78369141 C72.85440762 254.53349155 61.10606717 260.62933915 49.984375 269.87890625 C49.11167969 270.59949219 48.23898438 271.32007813 47.33984375 272.0625 C32.50232355 284.84875012 23.21757765 300.21311058 17.984375 318.87890625 C17.73816406 319.71550781 17.49195313 320.55210937 17.23828125 321.4140625 C12.2228363 341.57961014 17.56252809 363.79672595 28.05932617 381.30175781 C43.9017722 406.42995617 69.1786931 422.62347765 97.77978516 429.61352539 C131.52126901 437.20392711 165.7940483 431.13758275 195.17431641 413.05224609 C199.79310599 410.05819393 203.92501592 406.58161238 207.984375 402.87890625 C208.75007812 402.19441406 209.51578125 401.50992188 210.3046875 400.8046875 C226.06239189 385.95291385 237.36569079 364.73118888 238.1875 342.84765625 C238.6580359 316.02711006 228.62360687 293.90100833 210.109375 274.69140625 C196.02421995 260.97015338 174.64346762 249.02577539 154.984375 245.87890625 C153.994375 246.20890625 153.004375 246.53890625 151.984375 246.87890625 C152.56445312 247.23082031 153.14453125 247.58273437 153.7421875 247.9453125 C163.93246367 254.38570156 169.70319249 262.25454599 172.984375 273.87890625 C174.08270726 286.08827418 172.62227264 296.242473 164.73046875 306.00390625 C155.20557568 316.23197935 142.77874217 320.96146615 128.984375 321.87890625 C114.83061113 322.01338382 101.77402463 317.77469321 91.140625 308.22265625 C83.17222143 299.60377075 80.60029053 289.98389789 80.70703125 278.55078125 C81.36575833 269.82960582 85.14105438 261.39782378 90.984375 254.87890625 C94.50468089 251.97526084 98.16504919 249.37302114 101.984375 246.87890625 C98.62673854 245.7596941 97.90459014 245.97743483 94.66015625 247.03125 Z "
              fill="#FFFFFF"
              transform="translate(129.015625,19.12109375)"
            />
          </svg>
          NOUNOURS
        </motion.div>

        {/* Hamburger Button */}

        <button
          onClick={toggleMenu}
          type="button"
          className="flex items-center justify-center p-3 rounded-lg bg-transparent text-white transition-all duration-300 hover:bg-white/10 focus:outline-none focus:ring-2 focus:ring-white"
          aria-label="Toggle menu"
          aria-controls="navbar-hamburger"
          aria-expanded={isOpen}
        >
          <motion.svg
            className="w-6 h-6"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            initial={{ rotate: 0 }}
            animate={{ rotate: isOpen ? 45 : 0 }}
            transition={{ duration: 0.3, ease: "easeInOut" }}
          >
            <motion.path
              stroke="currentColor"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
              d={isOpen ? "M6 18L18 6M6 6L18 18" : "M4 6h16M4 12h16M4 18h16"}
              initial={{ opacity: 1 }}
              animate={{ opacity: isOpen ? 0.8 : 1 }}
              transition={{ duration: 0.3 }}
            />
          </motion.svg>
        </button>
      </div>

      {/* Mobile Menu */}
      <motion.div
        id="navbar-hamburger"
        className={`absolute w-full transition-all duration-700 ease-out bg-blue-900 z-50 overflow-hidden ${
          isOpen ? "max-h-screen py-4" : "max-h-0"
        }`}
      >
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 p-4 place-items-center">
          {/* Première colonne (texte + vidéo) */}
          <motion.div
            className="text-center md:text-left"
            initial={{ opacity: 0, y: -50 }}
            animate={isOpen ? { opacity: 1, y: 0 } : { opacity: 0, y: -50 }}
            transition={{
              opacity: { duration: 0.5 },
              y: { duration: 0.7, ease: "easeOut" },
            }}
          >
            <h1 className="text-xl md:text-2xl font-bold text-white mt-6 md:mt-11 font-anton space-y-2">
              <Link
                to="equipe" // ID de la section cible
                smooth={true} // Défilement fluide
                duration={500} // Durée du défilement (en ms)
                className="hover:text-yellow-400 transition duration-300 cursor-pointer"
              >
                Equipe
              </Link>{" "}
              <br />
              <Link
                to="fonctionnalites" // ID de la section cible
                smooth={true} // Défilement fluide
                duration={500} // Durée du défilement (en ms)
                className="hover:text-yellow-400 transition duration-300 cursor-pointer"
              >
                Fonctionnalités
              </Link>{" "}
              <br />
              <Link
                to="problems" // ID de la section cible
                smooth={true} // Défilement fluide
                duration={500} // Durée du défilement (en ms)
                className="hover:text-yellow-400 transition duration-300 cursor-pointer"
              >
                Problèmes
              </Link>
            </h1>

            <video
              className="w-full md:w-96 h-auto rounded-lg mt-4"
              autoPlay
              loop
              muted
            >
              <source src="/assets/img/videoplayback.webm" type="video/webm" />
              Votre navigateur ne supporte pas la vidéo.
            </video>
          </motion.div>

          {/* Deuxième colonne (titre animé) */}
          <motion.h1
            className="text-5xl md:text-[120px] text-center md:text-end font-bold text-white mt-6 md:mt-11 font-anton"
            initial={{ opacity: 0, y: -50 }}
            animate={isOpen ? { opacity: 1, y: 0 } : { opacity: 0, y: -50 }}
            transition={{
              opacity: { duration: 0.7 },
              y: { duration: 0.7, ease: "easeOut" },
            }}
          >
            {/* "NOUN" avec animation */}
            <div className="flex justify-center md:justify-end space-x-2">
              {"NOUN".split("").map((char, index) => (
                <motion.span
                  key={index}
                  className="inline-block cursor-pointer"
                  drag
                  dragConstraints={{
                    left: -100,
                    right: 100,
                    top: -50,
                    bottom: 50,
                  }}
                  whileHover={{ scale: 1.2 }}
                  whileTap={{ scale: 0.9 }}
                >
                  {char}
                </motion.span>
              ))}
            </div>

            {/* "OURS" avec animation */}
            <div className="flex justify-center md:justify-end space-x-2">
              {"OURS".split("").map((char, index) => (
                <motion.span
                  key={index}
                  className="inline-block cursor-pointer"
                  drag
                  dragConstraints={{
                    left: -100,
                    right: 100,
                    top: -50,
                    bottom: 50,
                  }}
                  whileHover={{ scale: 1.2 }}
                  whileTap={{ scale: 0.9 }}
                >
                  {char}
                </motion.span>
              ))}
            </div>
          </motion.h1>
        </div>
      </motion.div>
    </motion.nav>
  );
}
